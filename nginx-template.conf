worker_processes 1;

events {
	worker_connections 1024;
}

http {
	map $$time_iso8601 $$date {
		~([^T]+) $$1;
	}

	log_format info '$$time_iso8601 info: $$request ($$msec) $$status $$remote_addr - $$remote_user $$body_bytes_sent "$$http_referer" "$$http_user_agent"';

	access_log /dev/stdout info;
	error_log /dev/stdout error;

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	# Define the cache zone with reduced sizes
	proxy_cache_path /cache/shop levels=1:2 keys_zone=shop_cache:5m max_size=2g inactive=30m;
	proxy_cache_path /cache/uploads levels=1:2 keys_zone=uploads_cache:5m max_size=2g inactive=30m;
	proxy_cache_path /cache/api levels=1:2 keys_zone=api_cache:5m max_size=2g inactive=30m;

	server {
		listen 80;
		server_name localhost;

		# Redirect HTTP requests to HTTPS for all paths except Let's Encrypt challenges
		location / {
			return 301 https://$$host$$request_uri;
		}
	}

	server {
		listen 443 ssl;
		server_name localhost;

		ssl_certificate /etc/nginx/certs/cert.pem;
		ssl_certificate_key /etc/nginx/certs/cert.pem.key;

		location /health {
			return 200 '{"status":"ok"}';
		}

		location /umami {
			proxy_pass http://umami:3000;
			proxy_set_header Host $$host;
			proxy_set_header X-Real-IP $$remote_addr;
			proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $$scheme;
			proxy_set_header X-Forwarded-Host $$host;
		}

		location ~ ^/(api/order|upload|content-manager|content-type-builder|admin|i18n|email|user-permissions|users-permissions|documentation|plugins) {
			proxy_pass http://cms:5555;
			proxy_set_header Host $$host;
			proxy_set_header X-Real-IP $$remote_addr;
			proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $$scheme;

			# Enable hmr while developing
			proxy_set_header Upgrade $$http_upgrade;
			proxy_set_header Connection "upgrade";

			# Disable caching
			proxy_cache off;
			proxy_buffering off;
		}

		location ~ ^/(api|uploads) {
			proxy_pass http://cms:5555;
			proxy_set_header Host $$host;
			proxy_set_header X-Real-IP $$remote_addr;
			proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $$scheme;

			# Enable caching
			proxy_cache api_cache;
			# For testing purposes, we set the cache lifetime to 10 seconds
			proxy_cache_valid ${NGINX_CACHE_LIFETIME};
			proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

			add_header X-Cache-Status $$upstream_cache_status;
		}

		location / {
			proxy_pass http://shop:9999;
			proxy_set_header Host $$host;
			proxy_set_header X-Real-IP $$remote_addr;
			proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $$scheme;

			# Enable caching
			proxy_cache shop_cache;
			proxy_cache_valid 10m;
			proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504;

			add_header X-Cache-Status $$upstream_cache_status;

			# Enable WebSocket support
			proxy_set_header Upgrade $$http_upgrade;
			proxy_set_header Connection "Upgrade";
		}
	}
}
